name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main 
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Umožňuje pouze jeden souběžný deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          if [ -f "package-lock.json" ]; then
            npm ci
          else
            npm install
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Debug info
        run: |
          echo "Node.js version: $(node -v)"
          echo "npm version: $(npm -v)"
          echo "Directory structure:"
          ls -la
          echo "node_modules/@tanstack structure:"
          ls -la node_modules/@tanstack || echo "Directory not found"
          echo "node_modules/axios structure:"
          ls -la node_modules/axios || echo "Directory not found"

      - name: Create build directory
        run: mkdir -p build

      - name: Create directory structure
        run: |
          mkdir -p build/node_modules/@tanstack
          mkdir -p build/node_modules/axios
          mkdir -p build/src

      - name: Copy static files
        run: |
          echo "Kopírování index.html..."
          cp index.html build/ || echo "Error copying index.html"
          
          echo "Kopírování src adresáře..."
          mkdir -p build/src/components/layout
          mkdir -p build/src/components/modules
          mkdir -p build/src/services
          mkdir -p build/src/utils
          mkdir -p build/src/styles
          mkdir -p build/src/tests
          
          cp -r src/components/layout/* build/src/components/layout/ || echo "Error copying layout components directory"
          cp -r src/components/modules/* build/src/components/modules/ || echo "Error copying modules components directory"
          cp -r src/services/* build/src/services/ || echo "Error copying services directory"
          cp -r src/utils/* build/src/utils/ || echo "Error copying utils directory"
          cp -r src/styles/* build/src/styles/ || echo "Error copying styles directory"
          cp -r src/tests/* build/src/tests/ || echo "Error copying tests directory"
          cp -r src/App.js build/src/ || echo "Error copying App.js"
          cp -r src/index.js build/src/ || echo "Error copying index.js"
          cp -r src/loader.js build/src/ || echo "Error copying loader.js"
          
          # Ensure App.js has the React hooks defined and global export
          sed -i '1s/^/\/\/ Hlavní aplikace\n\/\/ Explicitně definujeme React hooks\nconst { useState, useEffect, useRef } = React;\n\n/' build/src/App.js
          echo -e "\n// Globální export pro přístup v HTML\nwindow.App = App;" >> build/src/App.js
          
          # Fix loader.js to avoid duplicate variable declarations
          sed -i 's/const isGitHubPages = window.location.hostname.includes/if (typeof window.isGitHubPages === "undefined") {\n    window.isGitHubPages = window.location.hostname.includes/g' build/src/loader.js
          sed -i 's/window.basePath = isGitHubPages/if (typeof window.basePath === "undefined") {\n    window.basePath = window.isGitHubPages/g' build/src/loader.js
          sed -i 's/window.getPath = (path) => {/if (typeof window.getPath === "undefined") {\n    window.getPath = (path) => {/g' build/src/loader.js
          
          # Fix React Query initialization in index.html
          sed -i 's/if (typeof tanstack !== "undefined" && typeof tanstack.createQueryClient !== "undefined") {/if (typeof window.tanstack !== "undefined") {\n                    console.log("Using tanstack namespace for React Query");\n                    if (typeof window.tanstack.QueryClient !== "undefined") {/g' build/index.html
          sed -i 's/window.queryClient = new tanstack.createQueryClient({/window.queryClient = new window.tanstack.QueryClient({/g' build/index.html
          sed -i 's/window.QueryClientProvider = tanstack.QueryClientProvider;/window.QueryClientProvider = window.tanstack.QueryClientProvider;/g' build/index.html
          
          echo "Kopírování @tanstack knihoven..."
          if [ -d "node_modules/@tanstack/react-query" ]; then
            cp -r node_modules/@tanstack/react-query build/node_modules/@tanstack/
          elif [ -d "node_modules/@tanstack" ]; then
            cp -r node_modules/@tanstack/* build/node_modules/@tanstack/
          else
            echo "Warning: @tanstack knihovny nenalezeny"
          fi
          
          echo "Kopírování axios knihovny..."
          if [ -d "node_modules/axios/dist" ]; then
            cp -r node_modules/axios/dist build/node_modules/axios/
          elif [ -d "node_modules/axios" ]; then
            cp -r node_modules/axios build/node_modules/
          else
            echo "Warning: axios knihovna nenalezena"
          fi
          
          echo "Vytváření .nojekyll souboru..."
          touch build/.nojekyll
          
          echo "Struktura adresáře build po kopírování:"
          ls -la build/
          echo "Struktura adresáře build/node_modules:"
          ls -la build/node_modules/ || echo "Adresář nenalezen"
          echo "Struktura adresáře build/node_modules/@tanstack:"
          ls -la build/node_modules/@tanstack/ || echo "Adresář nenalezen"

      - name: Create .env file
        run: |
          echo "Vytváření .env souboru..."
          echo "COINGECKO_API_KEY=${{ secrets.COINGECKO_API_KEY || '' }}" > build/.env
          echo "ALPHAVANTAGE_API_KEY=${{ secrets.ALPHAVANTAGE_API_KEY || 'demo' }}" >> build/.env
          echo "NEWSAPI_API_KEY=${{ secrets.NEWSAPI_API_KEY || '8c3fb4fd9bef4a86a2dd1e4ec00b32bf' }}" >> build/.env
          echo "CRYPTOCOMPARE_API_KEY=${{ secrets.CRYPTOCOMPARE_API_KEY || '' }}" >> build/.env
          
          echo ".env soubor vytvořen úspěšně"
          echo "Obsah .env souboru (bez API klíčů):"
          grep -v "API_KEY" build/.env || echo "Žádné řádky bez API_KEY nalezeny"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  deploy:
    name: Deploy
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
