name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main 
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Umožňuje pouze jeden souběžný deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          if [ -f "package-lock.json" ]; then
            npm ci
          else
            npm install
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Debug info
        run: |
          echo "Node.js version: $(node -v)"
          echo "npm version: $(npm -v)"
          echo "Directory structure:"
          ls -la
          echo "node_modules/@tanstack structure:"
          ls -la node_modules/@tanstack || echo "Directory not found"
          echo "node_modules/axios structure:"
          ls -la node_modules/axios || echo "Directory not found"

      - name: Create build directory
        run: mkdir -p build

      - name: Create directory structure
        run: |
          mkdir -p build/node_modules/@tanstack
          mkdir -p build/node_modules/axios

      - name: Copy static files
        run: |
          echo "Copying public directory..."
          cp -r public/* build/ || echo "Error copying public directory"
          
          echo "Copying index.html..."
          cp index.html build/ || echo "Error copying index.html"
          
          echo "Copying src directory..."
          cp -r src build/ || echo "Error copying src directory"
          
          echo "Copying @tanstack libraries..."
          if [ -d "node_modules/@tanstack/react-query" ]; then
            cp -r node_modules/@tanstack/react-query build/node_modules/@tanstack/
          elif [ -d "node_modules/@tanstack" ]; then
            cp -r node_modules/@tanstack/* build/node_modules/@tanstack/
          else
            echo "Warning: @tanstack libraries not found"
          fi
          
          echo "Copying axios library..."
          if [ -d "node_modules/axios/dist" ]; then
            cp -r node_modules/axios/dist build/node_modules/axios/
          elif [ -d "node_modules/axios" ]; then
            cp -r node_modules/axios build/node_modules/
          else
            echo "Warning: axios library not found"
          fi
          
          echo "Creating .nojekyll file..."
          touch build/.nojekyll
          
          echo "Build directory structure after copying:"
          ls -la build/
          echo "Build node_modules structure:"
          ls -la build/node_modules/ || echo "Directory not found"
          echo "Build node_modules/@tanstack structure:"
          ls -la build/node_modules/@tanstack/ || echo "Directory not found"

      - name: Create .env file
        run: |
          echo "Creating .env file..."
          echo "COINGECKO_API_KEY=${{ secrets.COINGECKO_API_KEY || '' }}" > build/.env
          echo "ALPHAVANTAGE_API_KEY=${{ secrets.ALPHAVANTAGE_API_KEY || 'demo' }}" >> build/.env
          echo "NEWSAPI_API_KEY=${{ secrets.NEWSAPI_API_KEY || '8c3fb4fd9bef4a86a2dd1e4ec00b32bf' }}" >> build/.env
          echo "CRYPTOCOMPARE_API_KEY=${{ secrets.CRYPTOCOMPARE_API_KEY || '' }}" >> build/.env
          
          echo ".env file created successfully"
          echo "Contents of .env file (without API keys):"
          grep -v "API_KEY" build/.env || echo "No non-API_KEY lines found"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  deploy:
    name: Deploy
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
